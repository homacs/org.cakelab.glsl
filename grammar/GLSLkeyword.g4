lexer grammar GLSLkeyword;



//
// Generated from list of keywords in GLSL specification
//

ATTRIBUTE: 'attribute';
CONST: 'const';
UNIFORM: 'uniform';
VARYING: 'varying';
BUFFER: 'buffer';
SHARED: 'shared';
COHERENT: 'coherent';
VOLATILE: 'volatile';
RESTRICT: 'restrict';
READONLY: 'readonly';
WRITEONLY: 'writeonly';
ATOMIC_UINT: 'atomic_uint';
LAYOUT: 'layout';
CENTROID: 'centroid';
FLAT: 'flat';
SMOOTH: 'smooth';
NOPERSPECTIVE: 'noperspective';
PATCH: 'patch';
SAMPLE: 'sample';
BREAK: 'break';
CONTINUE: 'continue';
DO: 'do';
FOR: 'for';
WHILE: 'while';
SWITCH: 'switch';
CASE: 'case';
DEFAULT: 'default';
IF: 'if';
ELSE: 'else';
SUBROUTINE: 'subroutine';
IN: 'in';
OUT: 'out';
INOUT: 'inout';
FLOAT: 'float';
DOUBLE: 'double';
INT: 'int';
VOID: 'void';
BOOL: 'bool';
fragment TRUE: 'true';
fragment FALSE: 'false';
INVARIANT: 'invariant';
PRECISE: 'precise';
DISCARD: 'discard';
RETURN: 'return';
MAT2: 'mat2';
MAT3: 'mat3';
MAT4: 'mat4';
DMAT2: 'dmat2';
DMAT3: 'dmat3';
DMAT4: 'dmat4';
MAT2X2: 'mat2x2';
MAT2X3: 'mat2x3';
MAT2X4: 'mat2x4';
DMAT2X2: 'dmat2x2';
DMAT2X3: 'dmat2x3';
DMAT2X4: 'dmat2x4';
MAT3X2: 'mat3x2';
MAT3X3: 'mat3x3';
MAT3X4: 'mat3x4';
DMAT3X2: 'dmat3x2';
DMAT3X3: 'dmat3x3';
DMAT3X4: 'dmat3x4';
MAT4X2: 'mat4x2';
MAT4X3: 'mat4x3';
MAT4X4: 'mat4x4';
DMAT4X2: 'dmat4x2';
DMAT4X3: 'dmat4x3';
DMAT4X4: 'dmat4x4';
VEC2: 'vec2';
VEC3: 'vec3';
VEC4: 'vec4';
IVEC2: 'ivec2';
IVEC3: 'ivec3';
IVEC4: 'ivec4';
BVEC2: 'bvec2';
BVEC3: 'bvec3';
BVEC4: 'bvec4';
DVEC2: 'dvec2';
DVEC3: 'dvec3';
DVEC4: 'dvec4';
UINT: 'uint';
UVEC2: 'uvec2';
UVEC3: 'uvec3';
UVEC4: 'uvec4';
LOW_PRECISION: 'lowp';
MEDIUM_PRECISION: 'mediump';
HIGH_PRECISION: 'highp';
PRECISION: 'precision';
SAMPLER1D: 'sampler1D';
SAMPLER2D: 'sampler2D';
SAMPLER3D: 'sampler3D';
SAMPLERCUBE: 'samplerCube';
SAMPLER1DSHADOW: 'sampler1DShadow';
SAMPLER2DSHADOW: 'sampler2DShadow';
SAMPLERCUBESHADOW: 'samplerCubeShadow';
SAMPLER1DARRAY: 'sampler1DArray';
SAMPLER2DARRAY: 'sampler2DArray';
SAMPLER1DARRAYSHADOW: 'sampler1DArrayShadow';
SAMPLER2DARRAYSHADOW: 'sampler2DArrayShadow';
ISAMPLER1D: 'isampler1D';
ISAMPLER2D: 'isampler2D';
ISAMPLER3D: 'isampler3D';
ISAMPLERCUBE: 'isamplerCube';
ISAMPLER1DARRAY: 'isampler1DArray';
ISAMPLER2DARRAY: 'isampler2DArray';
USAMPLER1D: 'usampler1D';
USAMPLER2D: 'usampler2D';
USAMPLER3D: 'usampler3D';
USAMPLERCUBE: 'usamplerCube';
USAMPLER1DARRAY: 'usampler1DArray';
USAMPLER2DARRAY: 'usampler2DArray';
SAMPLER2DRECT: 'sampler2DRect';
SAMPLER2DRECTSHADOW: 'sampler2DRectShadow';
ISAMPLER2DRECT: 'isampler2DRect';
USAMPLER2DRECT: 'usampler2DRect';
SAMPLERBUFFER: 'samplerBuffer';
ISAMPLERBUFFER: 'isamplerBuffer';
USAMPLERBUFFER: 'usamplerBuffer';
SAMPLER2DMS: 'sampler2DMS';
ISAMPLER2DMS: 'isampler2DMS';
USAMPLER2DMS: 'usampler2DMS';
SAMPLER2DMSARRAY: 'sampler2DMSArray';
ISAMPLER2DMSARRAY: 'isampler2DMSArray';
USAMPLER2DMSARRAY: 'usampler2DMSArray';
SAMPLERCUBEARRAY: 'samplerCubeArray';
SAMPLERCUBEARRAYSHADOW: 'samplerCubeArrayShadow';
ISAMPLERCUBEARRAY: 'isamplerCubeArray';
USAMPLERCUBEARRAY: 'usamplerCubeArray';
IMAGE1D: 'image1D';
IIMAGE1D: 'iimage1D';
UIMAGE1D: 'uimage1D';
IMAGE2D: 'image2D';
IIMAGE2D: 'iimage2D';
UIMAGE2D: 'uimage2D';
IMAGE3D: 'image3D';
IIMAGE3D: 'iimage3D';
UIMAGE3D: 'uimage3D';
IMAGE2DRECT: 'image2DRect';
IIMAGE2DRECT: 'iimage2DRect';
UIMAGE2DRECT: 'uimage2DRect';
IMAGECUBE: 'imageCube';
IIMAGECUBE: 'iimageCube';
UIMAGECUBE: 'uimageCube';
IMAGEBUFFER: 'imageBuffer';
IIMAGEBUFFER: 'iimageBuffer';
UIMAGEBUFFER: 'uimageBuffer';
IMAGE1DARRAY: 'image1DArray';
IIMAGE1DARRAY: 'iimage1DArray';
UIMAGE1DARRAY: 'uimage1DArray';
IMAGE2DARRAY: 'image2DArray';
IIMAGE2DARRAY: 'iimage2DArray';
UIMAGE2DARRAY: 'uimage2DArray';
IMAGECUBEARRAY: 'imageCubeArray';
IIMAGECUBEARRAY: 'iimageCubeArray';
UIMAGECUBEARRAY: 'uimageCubeArray';
IMAGE2DMS: 'image2DMS';
IIMAGE2DMS: 'iimage2DMS';
UIMAGE2DMS: 'uimage2DMS';
IMAGE2DMSARRAY: 'image2DMSArray';
IIMAGE2DMSARRAY: 'iimage2DMSArray';
UIMAGE2DMSARRAY: 'uimage2DMSArray';

SAMPLEREXTERNALOES: 'samplerExternalOES';


STRUCT: 'struct';

// Grammar Note: Following is a set of keywords reserved for future purposes
COMMON: 'common';
PARTITION: 'partition';
ACTIVE: 'active';
ASM: 'asm';
CLASS: 'class';
UNION: 'union';
ENUM: 'enum';
TYPEDEF: 'typedef';
TEMPLATE: 'template';
THIS: 'this';
RESOURCE: 'resource';
GOTO: 'goto';
INLINE: 'inline';
NOINLINE: 'noinline';
PUBLIC: 'public';
STATIC: 'static';
EXTERN: 'extern';
EXTERNAL: 'external';
INTERFACE: 'interface';
LONG: 'long';
SHORT: 'short';
HALF: 'half';
FIXED: 'fixed';
UNSIGNED: 'unsigned';
SUPERP: 'superp';
INPUT: 'input';
OUTPUT: 'output';
HVEC2: 'hvec2';
HVEC3: 'hvec3';
HVEC4: 'hvec4';
FVEC2: 'fvec2';
FVEC3: 'fvec3';
FVEC4: 'fvec4';
SAMPLER3DRECT: 'sampler3DRect';
FILTER: 'filter';
SIZEOF: 'sizeof';
CAST: 'cast';
NAMESPACE: 'namespace';
USING: 'using';

