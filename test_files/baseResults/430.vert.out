430.vert
Warning, version 430 is not yet complete; most version-specific features are present, but some are missing.
ERROR: 0:3: 'location' : can only appy to uniform, buffer, in, or out storage qualifiers 
ERROR: 0:7: 'in' : cannot declare an input block in a vertex shader 
ERROR: 0:7: 'location qualifier on in/out block' : not supported for this version or the enabled extensions 
ERROR: 0:8: 'location qualifier on in/out block' : not supported for this version or the enabled extensions 
ERROR: 0:23: 'invariant' : can only apply to an output 
ERROR: 0:21: 'g' : cannot use storage or interpolation qualifiers on structure members 
ERROR: 0:22: 'h' : cannot use storage or interpolation qualifiers on structure members 
ERROR: 0:23: 'i' : cannot use invariant qualifier on structure members 
ERROR: 0:24: 'j' : cannot use memory qualifiers on structure members 
ERROR: 0:25: 'm3' : cannot use layout qualifiers on structure members 
ERROR: 0:28: '' : cannot use invariant qualifier on a function parameter 
ERROR: 0:30: '' : cannot use layout qualifiers on a function parameter 
ERROR: 0:31: '' : cannot use auxiliary or interpolation qualifiers on a function parameter 
ERROR: 0:42: 'location' : overlapping use of location 53
ERROR: 0:47: 'gl_ClipDistance array size' : must be less than gl_MaxClipDistances (8)
ERROR: 0:51: 'start' : undeclared identifier 
ERROR: 0:51: '' : constant expression required 
ERROR: 0:51: 'layout-id value' : scalar integer expression required 
ERROR: 0:53: 'in' : cannot declare an input block in a vertex shader 
ERROR: 0:54: 'location on block member' : not supported for this version or the enabled extensions 
ERROR: 0:57: 'in' : cannot declare an input block in a vertex shader 
ERROR: 0:58: 'location on block member' : not supported for this version or the enabled extensions 
ERROR: 0:59: 'location on block member' : not supported for this version or the enabled extensions 
ERROR: 0:62: 'uniform buffer-member align' : not supported for this version or the enabled extensions 
ERROR: 0:64: 'uniform buffer-member align' : not supported for this version or the enabled extensions 
ERROR: 0:65: 'uniform buffer-member align' : not supported for this version or the enabled extensions 
ERROR: 0:65: 'offset on block member' : not supported for this version or the enabled extensions 
ERROR: 0:66: 'offset on block member' : not supported for this version or the enabled extensions 
ERROR: 0:64: 'offset/align' : can only be used with std140 or std430 layout packing 
ERROR: 0:65: 'align' : can only be used with std140 or std430 layout packing 
ERROR: 0:71: 'offset on block member' : not supported for this version or the enabled extensions 
ERROR: 0:74: 'gl_MaxTransformFeedbackBuffers' : required extension not requested: GL_ARB_enhanced_layouts
ERROR: 0:75: 'gl_MaxTransformFeedbackInterleavedComponents' : required extension not requested: GL_ARB_enhanced_layouts
ERROR: 0:78: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:81: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:81: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:83: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:83: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:83: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:84: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:84: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:86: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:86: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:86: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:92: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:93: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:93: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:93: 'transform feedback qualifier' : not supported for this version or the enabled extensions 
ERROR: 0:117: 'in' : cannot declare an input block in a vertex shader 
ERROR: 0:123: 'in' : cannot declare an input block in a vertex shader 
ERROR: 0:146: 'shared' : not supported in this stage: vertex
ERROR: 0:150: 'barrier' : no matching overloaded function found 
ERROR: 0:154: 'memoryBarrierShared' : no matching overloaded function found 
ERROR: 0:156: 'groupMemoryBarrier' : no matching overloaded function found 
ERROR: 0:159: 'buffer' : buffers can be declared only as blocks 
ERROR: 0:168: 'textureSamples and imageSamples' : not supported for this version or the enabled extensions 
ERROR: 0:169: 'textureSamples and imageSamples' : not supported for this version or the enabled extensions 
ERROR: 0:170: 'textureSamples and imageSamples' : not supported for this version or the enabled extensions 
ERROR: 0:171: 'textureSamples and imageSamples' : not supported for this version or the enabled extensions 
ERROR: 59 compilation errors.  No code generated.


Shader version: 430
Requested GL_ARB_enhanced_layouts
Requested GL_ARB_shader_texture_image_samples
in xfb mode
ERROR: node is still EOpNull!
0:14  Function Definition: foo( (void)
0:14    Function Parameters: 
0:16    Sequence
0:16      move second child to first child (float)
0:16        direct index (float)
0:16          gl_ClipDistance: direct index for structure (out 17-element array of float)
0:16            'anon@0' (out block{out 17-element array of float gl_ClipDistance, })
0:16            Constant:
0:16              2 (const uint)
0:16          Constant:
0:16            2 (const int)
0:16        Constant:
0:16          3.700000
0:31  Function Definition: foo3(vf4;vf3;vf2;vf3; (void)
0:31    Function Parameters: 
0:31      'v4' (in 4-component vector of float)
0:31      'v3' (volatile in 3-component vector of float)
0:31      'v2' (in 2-component vector of float)
0:31      'cv3' (in 3-component vector of float)
0:148  Function Definition: fooBarrier( (void)
0:148    Function Parameters: 
0:150    Sequence
0:150      Constant:
0:150        0.000000
0:151      MemoryBarrier (void)
0:152      MemoryBarrierAtomicCounter (void)
0:153      MemoryBarrierBuffer (void)
0:154      Constant:
0:154        0.000000
0:155      MemoryBarrierImage (void)
0:156      Constant:
0:156        0.000000
0:166  Function Definition: fooq( (void)
0:166    Function Parameters: 
0:168    Sequence
0:168      Sequence
0:168        move second child to first child (int)
0:168          's' (int)
0:168          Function Call: textureSamples(s21; (int)
0:168            's2dms' (uniform sampler2DMS)
0:169      add second child into first child (int)
0:169        's' (int)
0:169        Function Call: textureSamples(usA21; (int)
0:169          'us2dmsa' (uniform usampler2DMSArray)
0:170      add second child into first child (int)
0:170        's' (int)
0:170        Function Call: imageSamples(iI21; (int)
0:170          'ii2dms' (layout(rgba32i ) uniform iimage2DMS)
0:171      add second child into first child (int)
0:171        's' (int)
0:171        Function Call: imageSamples(IA21; (int)
0:171          'i2dmsa' (layout(rgba32f ) uniform image2DMSArray)
0:176  Function Definition: fooq2( (void)
0:176    Function Parameters: 
0:178    Sequence
0:178      Sequence
0:178        move second child to first child (int)
0:178          's' (int)
0:178          Function Call: textureSamples(s21; (int)
0:178            's2dms' (uniform sampler2DMS)
0:179      add second child into first child (int)
0:179        's' (int)
0:179        Function Call: textureSamples(usA21; (int)
0:179          'us2dmsa' (uniform usampler2DMSArray)
0:180      add second child into first child (int)
0:180        's' (int)
0:180        Function Call: imageSamples(iI21; (int)
0:180          'ii2dms' (layout(rgba32i ) uniform iimage2DMS)
0:181      add second child into first child (int)
0:181        's' (int)
0:181        Function Call: imageSamples(IA21; (int)
0:181          'i2dmsa' (layout(rgba32f ) uniform image2DMSArray)
0:?   Linker Objects
0:?     'v4' (layout(location=3 ) 4-component vector of float)
0:?     'uv4' (layout(location=4 ) uniform 4-component vector of float)
0:?     'b1' (layout(location=2 ) in block{in 4-component vector of float v})
0:?     'b2' (layout(location=2 ) out block{out 4-component vector of float v})
0:?     'anon@0' (out block{out 17-element array of float gl_ClipDistance, })
0:?     'cs' (layout(location=10 ) smooth out 2-element array of structure{7-element array of 3X2 matrix of float m, float f})
0:?     'cf' (layout(location=54 ) smooth out float)
0:?     'cg' (layout(location=53 ) smooth out float)
0:?     'alias1' (layout(location=10 ) in 4-component vector of float)
0:?     'alias2' (layout(location=10 ) in 4-component vector of float)
0:?     'v6e' (layout(location=0 ) in 4-component vector of float)
0:?     'ininst2e' (in block{layout(location=25 ) in float f2})
0:?     'in4e' (in block{layout(location=50 ) in float f1, layout(location=51 ) in float f2})
0:?     'inst4e' (layout(column_major std140 align=16 ) uniform block{layout(column_major std140 offset=0 align=16 ) uniform int a})
0:?     'inst9e' (layout(column_major shared align=32 ) uniform block{layout(column_major shared offset=12 align=4 ) uniform float f, layout(column_major shared offset=20 ) uniform float g})
0:?     'spinste' (layout(column_major std140 ) uniform block{layout(column_major std140 offset=0 ) uniform 4-component vector of float a, layout(column_major std140 offset=32 ) uniform 3-component vector of float b})
0:?     'aconste' (4-element array of int)
0:?     'bconste' (64-element array of int)
0:?     'bbinst2' (out block{layout(xfb_buffer=0 xfb_offset=64 ) out 4-component vector of float bbv})
0:?     'bge' (layout(xfb_buffer=2 xfb_offset=48 xfb_stride=80 ) smooth out 4-component vector of float)
0:?     'bhe' (layout(xfb_buffer=3 xfb_offset=32 xfb_stride=64 ) smooth out 4-component vector of float)
0:?     'bbinst4e' (layout(xfb_stride=80 ) out block{layout(xfb_buffer=2 xfb_offset=16 ) out 4-component vector of float bbv1, layout(xfb_buffer=2 xfb_offset=32 ) out 4-component vector of float bbv2})
0:?     'bbinst5e' (out block{layout(xfb_buffer=3 xfb_offset=0 ) out 4-component vector of float bbv1, layout(xfb_buffer=3 xfb_offset=48 xfb_stride=64 ) out 4-component vector of float bbv2})
0:?     'inst4' (layout(column_major std140 align=16 ) uniform block{layout(column_major std140 offset=0 align=16 ) uniform int a})
0:?     'inst9' (layout(column_major std430 align=32 ) uniform block{layout(column_major std430 offset=12 align=4 ) uniform float f, layout(column_major std430 offset=20 align=32 ) uniform float g})
0:?     'spinst' (layout(column_major std140 ) uniform block{layout(column_major std140 offset=0 ) uniform 4-component vector of float a, layout(column_major std140 offset=32 ) uniform 3-component vector of float b})
0:?     'aconst' (4-element array of int)
0:?     'bconst' (64-element array of int)
0:?     'start2' (const int)
0:?       5 (const int)
0:?     'v6' (layout(location=19 ) in 4-component vector of float)
0:?     'ininst2' (in block{layout(location=28 component=0 ) in bool b1, layout(location=29 component=0 ) in float f1, layout(location=25 ) in float f2})
0:?     'in4' (in block{layout(location=50 ) in float f1, layout(location=51 ) in float f2})
0:?     'bbinst2g' (out block{layout(xfb_buffer=3 xfb_offset=64 ) out 4-component vector of float bbv})
0:?     'bg' (layout(xfb_buffer=1 xfb_offset=48 xfb_stride=80 ) smooth out 4-component vector of float)
0:?     'bh' (layout(xfb_buffer=1 xfb_offset=32 xfb_stride=80 ) smooth out 4-component vector of float)
0:?     'bbinst4' (layout(xfb_stride=80 ) out block{layout(xfb_buffer=1 xfb_offset=16 ) out 4-component vector of float bbv1})
0:?     'bbinst5' (out block{layout(xfb_buffer=1 xfb_offset=0 ) out 4-component vector of float bbv1, layout(xfb_buffer=1 xfb_offset=64 xfb_stride=80 ) out 4-component vector of float bbv2})
0:?     'sharedv' (shared 4-component vector of float)
0:?     'v' (buffer 4-component vector of float)
0:?     's2dms' (uniform sampler2DMS)
0:?     'us2dmsa' (uniform usampler2DMSArray)
0:?     'ii2dms' (layout(rgba32i ) uniform iimage2DMS)
0:?     'i2dmsa' (layout(rgba32f ) uniform image2DMSArray)
0:?     'gl_VertexID' (gl_VertexId int)
0:?     'gl_InstanceID' (gl_InstanceId int)


Linked vertex stage:

ERROR: Linking vertex stage: Missing entry point: Each stage requires one "void main()" entry point
ERROR: Linking vertex stage: xfb_stride is too small to hold all buffer entries:
ERROR:     xfb_buffer 3, xfb_stride 64, minimum stride needed: 80

Shader version: 430
Requested GL_ARB_enhanced_layouts
Requested GL_ARB_shader_texture_image_samples
in xfb mode
ERROR: node is still EOpNull!
0:14  Function Definition: foo( (void)
0:14    Function Parameters: 
0:16    Sequence
0:16      move second child to first child (float)
0:16        direct index (float)
0:16          gl_ClipDistance: direct index for structure (out 17-element array of float)
0:16            'anon@0' (out block{out 17-element array of float gl_ClipDistance, })
0:16            Constant:
0:16              2 (const uint)
0:16          Constant:
0:16            2 (const int)
0:16        Constant:
0:16          3.700000
0:31  Function Definition: foo3(vf4;vf3;vf2;vf3; (void)
0:31    Function Parameters: 
0:31      'v4' (in 4-component vector of float)
0:31      'v3' (volatile in 3-component vector of float)
0:31      'v2' (in 2-component vector of float)
0:31      'cv3' (in 3-component vector of float)
0:148  Function Definition: fooBarrier( (void)
0:148    Function Parameters: 
0:150    Sequence
0:150      Constant:
0:150        0.000000
0:151      MemoryBarrier (void)
0:152      MemoryBarrierAtomicCounter (void)
0:153      MemoryBarrierBuffer (void)
0:154      Constant:
0:154        0.000000
0:155      MemoryBarrierImage (void)
0:156      Constant:
0:156        0.000000
0:166  Function Definition: fooq( (void)
0:166    Function Parameters: 
0:168    Sequence
0:168      Sequence
0:168        move second child to first child (int)
0:168          's' (int)
0:168          Function Call: textureSamples(s21; (int)
0:168            's2dms' (uniform sampler2DMS)
0:169      add second child into first child (int)
0:169        's' (int)
0:169        Function Call: textureSamples(usA21; (int)
0:169          'us2dmsa' (uniform usampler2DMSArray)
0:170      add second child into first child (int)
0:170        's' (int)
0:170        Function Call: imageSamples(iI21; (int)
0:170          'ii2dms' (layout(rgba32i ) uniform iimage2DMS)
0:171      add second child into first child (int)
0:171        's' (int)
0:171        Function Call: imageSamples(IA21; (int)
0:171          'i2dmsa' (layout(rgba32f ) uniform image2DMSArray)
0:176  Function Definition: fooq2( (void)
0:176    Function Parameters: 
0:178    Sequence
0:178      Sequence
0:178        move second child to first child (int)
0:178          's' (int)
0:178          Function Call: textureSamples(s21; (int)
0:178            's2dms' (uniform sampler2DMS)
0:179      add second child into first child (int)
0:179        's' (int)
0:179        Function Call: textureSamples(usA21; (int)
0:179          'us2dmsa' (uniform usampler2DMSArray)
0:180      add second child into first child (int)
0:180        's' (int)
0:180        Function Call: imageSamples(iI21; (int)
0:180          'ii2dms' (layout(rgba32i ) uniform iimage2DMS)
0:181      add second child into first child (int)
0:181        's' (int)
0:181        Function Call: imageSamples(IA21; (int)
0:181          'i2dmsa' (layout(rgba32f ) uniform image2DMSArray)
0:?   Linker Objects
0:?     'v4' (layout(location=3 ) 4-component vector of float)
0:?     'uv4' (layout(location=4 ) uniform 4-component vector of float)
0:?     'b1' (layout(location=2 ) in block{in 4-component vector of float v})
0:?     'b2' (layout(location=2 ) out block{out 4-component vector of float v})
0:?     'anon@0' (out block{out 17-element array of float gl_ClipDistance, })
0:?     'cs' (layout(location=10 ) smooth out 2-element array of structure{7-element array of 3X2 matrix of float m, float f})
0:?     'cf' (layout(location=54 ) smooth out float)
0:?     'cg' (layout(location=53 ) smooth out float)
0:?     'alias1' (layout(location=10 ) in 4-component vector of float)
0:?     'alias2' (layout(location=10 ) in 4-component vector of float)
0:?     'v6e' (layout(location=0 ) in 4-component vector of float)
0:?     'ininst2e' (in block{layout(location=25 ) in float f2})
0:?     'in4e' (in block{layout(location=50 ) in float f1, layout(location=51 ) in float f2})
0:?     'inst4e' (layout(column_major std140 align=16 ) uniform block{layout(column_major std140 offset=0 align=16 ) uniform int a})
0:?     'inst9e' (layout(column_major shared align=32 ) uniform block{layout(column_major shared offset=12 align=4 ) uniform float f, layout(column_major shared offset=20 ) uniform float g})
0:?     'spinste' (layout(column_major std140 ) uniform block{layout(column_major std140 offset=0 ) uniform 4-component vector of float a, layout(column_major std140 offset=32 ) uniform 3-component vector of float b})
0:?     'aconste' (4-element array of int)
0:?     'bconste' (64-element array of int)
0:?     'bbinst2' (out block{layout(xfb_buffer=0 xfb_offset=64 ) out 4-component vector of float bbv})
0:?     'bge' (layout(xfb_buffer=2 xfb_offset=48 xfb_stride=80 ) smooth out 4-component vector of float)
0:?     'bhe' (layout(xfb_buffer=3 xfb_offset=32 xfb_stride=64 ) smooth out 4-component vector of float)
0:?     'bbinst4e' (layout(xfb_stride=80 ) out block{layout(xfb_buffer=2 xfb_offset=16 ) out 4-component vector of float bbv1, layout(xfb_buffer=2 xfb_offset=32 ) out 4-component vector of float bbv2})
0:?     'bbinst5e' (out block{layout(xfb_buffer=3 xfb_offset=0 ) out 4-component vector of float bbv1, layout(xfb_buffer=3 xfb_offset=48 xfb_stride=64 ) out 4-component vector of float bbv2})
0:?     'inst4' (layout(column_major std140 align=16 ) uniform block{layout(column_major std140 offset=0 align=16 ) uniform int a})
0:?     'inst9' (layout(column_major std430 align=32 ) uniform block{layout(column_major std430 offset=12 align=4 ) uniform float f, layout(column_major std430 offset=20 align=32 ) uniform float g})
0:?     'spinst' (layout(column_major std140 ) uniform block{layout(column_major std140 offset=0 ) uniform 4-component vector of float a, layout(column_major std140 offset=32 ) uniform 3-component vector of float b})
0:?     'aconst' (4-element array of int)
0:?     'bconst' (64-element array of int)
0:?     'start2' (const int)
0:?       5 (const int)
0:?     'v6' (layout(location=19 ) in 4-component vector of float)
0:?     'ininst2' (in block{layout(location=28 component=0 ) in bool b1, layout(location=29 component=0 ) in float f1, layout(location=25 ) in float f2})
0:?     'in4' (in block{layout(location=50 ) in float f1, layout(location=51 ) in float f2})
0:?     'bbinst2g' (out block{layout(xfb_buffer=3 xfb_offset=64 ) out 4-component vector of float bbv})
0:?     'bg' (layout(xfb_buffer=1 xfb_offset=48 xfb_stride=80 ) smooth out 4-component vector of float)
0:?     'bh' (layout(xfb_buffer=1 xfb_offset=32 xfb_stride=80 ) smooth out 4-component vector of float)
0:?     'bbinst4' (layout(xfb_stride=80 ) out block{layout(xfb_buffer=1 xfb_offset=16 ) out 4-component vector of float bbv1})
0:?     'bbinst5' (out block{layout(xfb_buffer=1 xfb_offset=0 ) out 4-component vector of float bbv1, layout(xfb_buffer=1 xfb_offset=64 xfb_stride=80 ) out 4-component vector of float bbv2})
0:?     'sharedv' (shared 4-component vector of float)
0:?     'v' (buffer 4-component vector of float)
0:?     's2dms' (uniform sampler2DMS)
0:?     'us2dmsa' (uniform usampler2DMSArray)
0:?     'ii2dms' (layout(rgba32i ) uniform iimage2DMS)
0:?     'i2dmsa' (layout(rgba32f ) uniform image2DMSArray)
0:?     'gl_VertexID' (gl_VertexId int)
0:?     'gl_InstanceID' (gl_InstanceId int)

